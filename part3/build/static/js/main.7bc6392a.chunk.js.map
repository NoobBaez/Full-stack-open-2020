{"version":3,"sources":["services/person.js","component/Filter.js","component/DeleteButton.js","component/Persons.js","component/PersonForm.js","component/Notification.js","component/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPersonObj","post","id","delete","updatePersonObj","put","Filter","onChange","type","DeleteButton","person","handleOnDelete","onClick","Persons","persons","map","key","name","number","PersonForm","newName","newNumber","handleOnSubmit","handleNameChange","handleNumberChange","onSubmit","value","Notification","notification","className","isSuccess","message","App","useState","setPersons","filteredPersona","setFiltered","setNewName","setNewNumber","setNotification","useEffect","personService","personsData","cleanForm","handleOnUpdate","personData","newListPersons","catch","filter","p","setTimeout","event","target","toLowerCase","filtered","trim","includes","preventDefault","length","findedPerson","find","window","confirm","newPerson","isValidData","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bc6392a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => response.data)\n}\n\nconst create = (newPersonObj) => {\n    return axios\n        .post(baseUrl, newPersonObj)\n        .then(response => response.data)\n}\n\nconst Delete = (id) => {\n    return axios\n        .delete(`${baseUrl}/${id}`)\n        .then(response => response.data)\n}\n\nconst Update = (updatePersonObj) => {\n    return axios\n        .put(`${baseUrl}/${updatePersonObj.id}`, updatePersonObj)\n        .then(response => response.data)\n}\n\nexport default { getAll, create, Delete, Update }","import React from 'react'\n\nconst Filter = ({ onChange }) => {\n    return (\n        <form>\n            filter shown with<input type=\"text\" onChange={onChange} />\n        </form>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst DeleteButton = ({ person, handleOnDelete }) => {\n    return <button\n        onClick={() => handleOnDelete(person)}>\n        delete\n            </button>\n}\n\nexport default DeleteButton","import React from 'react'\nimport DeleteButton from './DeleteButton'\n\nconst Persons = ({ persons, handleOnDelete }) => {\n    return persons.map(person =>\n        <div key={person.id}>\n            {person.name} {person.number}\n            <DeleteButton\n                person={person}\n                handleOnDelete={handleOnDelete}\n            />\n        </div>\n    )\n}\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({ newName, newNumber, handleOnSubmit, handleNameChange, handleNumberChange }) => {\n    return (\n        <form onSubmit={handleOnSubmit}>\n            <div>\n                name: <input\n                    value={newName}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={newNumber}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <button type=\"submit\">add</button>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ notification }) => {\n    if (!notification) { return null }\n\n    return (\n        <p\n            className={notification.isSuccess\n                ? 'successNotification'\n                : 'errorNotification'\n            }> {notification.message}</p >\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from '../services/person'\n\nimport Filter from './Filter'\nimport Persons from './Persons'\nimport PersonForm from './PersonForm'\nimport Notification from './Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n\n    //this state is use for the filter name\n    const [filteredPersona, setFiltered] = useState()\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [notification, setNotification] = useState()\n\n    const handleNameChange = (event) => setNewName(event.target.value)\n\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\n\n    //effect callback\n    const hook = () => {\n        personService\n            .getAll()\n            .then(personsData => {\n                setPersons(personsData)\n            })\n    }\n\n    useEffect(hook, [])\n\n    //helper function\n    const isValidData = () => {\n        if (newName.trim() === '' || newNumber.length < 3) return false\n\n        const findedPerson = persons.find(person => person.name === newName)\n\n        if (findedPerson) {\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n            if (result) {\n                const newPerson = {\n                    id: findedPerson.id,\n                    name: newName,\n                    number: newNumber\n                }\n                handleOnUpdate(newPerson)\n            }\n            return false\n        }\n        return true\n    }\n\n    const cleanForm = () => {\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleOnSubmit = (event) => {\n        event.preventDefault()\n        if (isValidData()) {\n            const personObj = {\n                name: newName,\n                number: newNumber\n            }\n            personService\n                .create(personObj)\n                .then((createdPerson) => {\n                    setPersons(persons.concat(createdPerson))\n\n                    cleanForm()\n\n                    setNotification({ message: `Added ${newName}`, isSuccess: true })\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleFilterChange = (event) => {\n        const value = event.target.value.toLowerCase()\n        const filtered = persons.filter(person =>\n            person.name\n                .toLowerCase()\n                .trim()\n                .includes(value)\n        )\n        setFiltered(filtered)\n    }\n\n    const handleOnDelete = (person) => {\n        const result = window.confirm(`Delete ${person.name}`)\n        if (result) {\n            personService\n                .Delete(person.id)\n            setPersons(persons.filter(p => p.id !== person.id))\n        }\n    }\n\n    const handleOnUpdate = (updatePersonObj) => {\n        personService\n            .Update(updatePersonObj)\n            .then(personData => {\n                let newListPersons = persons.map(person => person.name === personData.name ? personData : person)\n\n                setPersons(newListPersons)\n                setFiltered(newListPersons)\n\n                cleanForm()\n            })\n            .catch(() => {\n                setNotification({ message: `Information of ${updatePersonObj.name} has been removed from server`, isSuccess: false })\n\n                setPersons(persons.filter(p => p.id !== updatePersonObj.id))\n\n                setTimeout(() => {\n                    setNotification(null)\n                }, 5000)\n            })\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification} />\n            <Filter onChange={handleFilterChange} />\n            <h3>add a new number</h3>\n            <PersonForm\n                newName={newName}\n                newNumber={newNumber}\n                handleOnSubmit={handleOnSubmit}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons\n                persons={filteredPersona ? filteredPersona : persons}\n                handleOnDelete={handleOnDelete}\n            />\n        </div>\n    )\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './component/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}