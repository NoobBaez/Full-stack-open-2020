{"version":3,"sources":["reducers/user.js","reducers/blog.js","reducers/alert.js","reducers/users.js","services/blog.js","services/login.js","components/loginForm.js","components/blog/blogForm.js","components/toggleVisibility.js","components/blog/blogList.js","components/comment/commentForm.js","components/comment/comments.js","components/blog/blog.js","components/alert.js","services/user.js","components/user/usersList.js","components/user/user.js","components/logoutButton.js","components/navigationBar.js","App.js","index.js"],"names":["setUser","userObj","type","data","userReducer","state","action","removeBlog","blog","blogReducer","filter","id","successAlert","message","errorAlert","alertReducer","text","usersReducer","baseUrl","token","getAll","a","axios","get","request","addComment","blogId","comment","config","headers","Authorization","post","response","create","setToken","newToken","updateLikes","put","remove","delete","login","credential","LoginForm","useState","username","setUsername","password","setPassword","dispatch","useDispatch","handleLogin","event","preventDefault","loginServices","name","userObject","window","localStorage","setItem","JSON","stringify","blogServices","console","log","onSubmit","onChange","target","value","BlogForm","newBlog","setNewBlog","blogs","useSelector","submitHandle","title","author","url","concat","className","placeholder","TogglableVisibility","React","forwardRef","props","ref","visible","setVisible","hideOnVisible","display","showOnVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonTitle","children","BlogList","map","key","to","CommentForm","createComment","setComment","e","then","_","Comments","comments","setComments","match","useRouteMatch","useEffect","params","index","Blog","blogSelected","setBlog","user","parse","getItem","handleClickLike","toUpdateBlog","likes","handleClickRemove","confirm","removeButton","href","Alert","alert","UsersList","users","userServices","initializeUsers","length","User","selectedUser","find","Math","random","toString","LogoutButton","removeItem","setTimeout","padding","NavigationBar","App","blogFormRef","useRef","returnBlogs","sort","b","inizializeBlog","path","reducer","combineReducers","initializeUser","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"uQAWaA,EAAU,SAACC,GACpB,MAAO,CACHC,KAAM,WACNC,KAAMF,IAUCG,EAxBK,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCAC1C,OAAQA,EAAOJ,MACX,IAAK,WACD,OAAOI,EAAOH,KAClB,IAAK,UACD,OAAO,KACX,QACI,OAAOE,ICkBNE,EAAa,SAACC,GACvB,MAAO,CACHN,KAAM,cACNC,KAAMK,IAICC,EAhCK,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOJ,MACX,IAAK,aACD,OAAOI,EAAOH,KAClB,IAAK,cACD,OAAOE,EAAMK,QAAO,SAAAF,GAAI,OAAIA,EAAKG,KAAOL,EAAOH,KAAKQ,MACxD,QACI,OAAON,I,uBCYNO,EAAe,SAACC,GACzB,MAAO,CACHX,KAAM,gBACNC,KAAMU,IAIDC,EAAa,SAACD,GACvB,MAAO,CACHX,KAAM,cACNC,KAAMU,IAcCE,EA3CM,WAA2B,IAA1BV,EAAyB,uDAAjB,KAAMC,EAAW,uCAC3C,OAAQA,EAAOJ,MACX,IAAK,gBACD,MAAO,CACHG,OAAO,EACPW,KAAMV,EAAOH,MAErB,IAAK,cACD,MAAO,CACHE,OAAO,EACPW,KAAMV,EAAOH,MAErB,IAAK,eACD,OAAO,KACX,QACI,OAAOE,ICCJY,EAhBM,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIC,EAAW,uCACzC,OAAQA,EAAOJ,MACX,IAAK,aACD,OAAOI,EAAOH,KAClB,QACI,OAAOE,I,gCCJba,EAAU,aAEZC,EAAQ,KAMNC,EAAM,uCAAG,4BAAAC,EAAA,sEACWC,IAAMC,IAAIL,GADrB,cACLM,EADK,yBAEJA,EAAQrB,MAFJ,2CAAH,qDAKNsB,EAAU,uCAAG,WAAOC,EAAQC,GAAf,iBAAAN,EAAA,6DACTO,EAAS,CACXC,QAAS,CAAEC,cAAeX,IAFf,SAIQG,IAAMS,KAAN,UAAcb,EAAd,YAAyBQ,EAAzB,aAA4CC,EAASC,GAJ7D,cAITI,EAJS,yBAKRA,EAAS7B,MALD,2CAAH,wDAgCD,GACXiB,SACAa,OA1BQ,uCAAG,WAAMzB,GAAN,iBAAAa,EAAA,6DACLO,EAAS,CACXC,QAAS,CAAEC,cAAeX,IAFnB,SAIYG,IAAMS,KAAKb,EAASV,EAAMoB,GAJtC,cAILI,EAJK,yBAKJA,EAAS7B,MALL,2CAAH,sDA2BR+B,SA5Ca,SAAAC,GACbhB,EAAK,iBAAagB,IA4ClBC,YApBa,uCAAG,WAAM5B,GAAN,iBAAAa,EAAA,6DACVO,EAAS,CACXC,QAAS,CAAEC,cAAeX,IAFd,SAIOG,IAAMe,IAAN,UAAanB,EAAb,YAAwBV,EAAKG,IAAMH,EAAMoB,GAJhD,cAIVI,EAJU,yBAKTA,EAAS7B,MALA,2CAAH,sDAqBbmC,OAbQ,uCAAG,WAAM3B,GAAN,iBAAAU,EAAA,6DACLO,EAAS,CACXC,QAAS,CAAEC,cAAeX,IAFnB,SAIYG,IAAMiB,OAAN,UAAgBrB,EAAhB,YAA2BP,GAAMiB,GAJ7C,cAILI,EAJK,yBAKJA,GALI,2CAAH,sDAcRP,c,eC5CW,GAAEe,MALN,uCAAG,WAAMC,GAAN,eAAApB,EAAA,sEACaC,IAAMS,KAHjB,aAG+BU,GADjC,cACJT,EADI,yBAEHA,EAAS7B,MAFN,2CAAH,uDC8CIuC,EA1CG,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,OAEYF,mBAAS,IAFrB,mBAEbG,EAFa,KAEHC,EAFG,KAIdC,EAAWC,cAEXC,EAAW,uCAAG,WAAOC,GAAP,eAAA9B,EAAA,6DAChB8B,EAAMC,iBADU,kBAGaC,EAAcb,MAAM,CAAEc,KAAMV,EAAUE,WAAUF,aAH7D,QAGNW,EAHM,UAKRC,OAAOC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUL,IAC7DM,EAAa3B,SAASqB,EAAWpC,OACjC6B,EAAShD,EAAQuD,IACjBP,EAASpC,EAAa,yBARd,gDAWZoC,EAASlC,EAAW,iCACpBgD,QAAQC,IAAR,MAZY,yDAAH,sDAgBjB,OACI,oCACI,sDACA,0BAAMC,SAAUd,GACZ,yCACa,2BACLe,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAerB,EAAYqB,EAAOC,QAC/CxD,GAAG,oBAEX,yCACa,2BAAOT,KAAK,WACjB+D,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAenB,EAAYmB,EAAOC,QAC/CxD,GAAG,oBAEX,4BAAQT,KAAK,UAAb,Y,QC2BDkE,EAhEE,WAAO,IAAD,QACWzB,mBAAS,MADpB,mBACZ0B,EADY,KACHC,EADG,KAGbC,EAAQC,aAAY,SAAAnE,GAAK,OAAIA,EAAMkE,SACnCvB,EAAWC,cAEXwB,EAAY,uCAAG,WAAOtB,GAAP,eAAA9B,EAAA,yDACjB8B,EAAMC,iBACDiB,GAAYA,EAAQK,OAAUL,EAAQM,QAAWN,EAAQO,IAF7C,uBAGb5B,EAASlC,EAAW,6BAHP,0CAOM+C,EAAa5B,OAAOoC,GAP1B,QAOXrC,EAPW,UAUbgB,ENHD,CACH9C,KAAM,WACNC,KMCqBoE,EAAMM,OAAO7C,KAC9BgB,EAASpC,EAAa,GAAD,OAAI+C,KAAKC,UAAUS,EAAQK,OAA3B,4BAEzBJ,EAAW,MAbM,2CAAH,sDAgBlB,OACI,yBAAKQ,UAAU,OACX,0CACA,0BAAMd,SAAUS,GACZ,yBAAKK,UAAU,SACX,2BAAOA,UAAU,UACjB,2BACIA,UAAU,oBACVX,MAAK,iBAAEE,QAAF,IAAEA,OAAF,EAAEA,EAASK,aAAX,QAAoB,GACzBT,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACTI,EAAW,2BAAKD,GAAN,IAAeK,MAAOR,EAAOC,UAE3CY,YAAY,8BAIpB,yBAAKD,UAAU,SACX,2BAAOA,UAAU,WACjB,2BACIX,MAAK,iBAAEE,QAAF,IAAEA,OAAF,EAAEA,EAASM,cAAX,QAAqB,GAC1BV,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAeI,EAAW,2BAAKD,GAAN,IAAeM,OAAQT,EAAOC,UACpEW,UAAU,SACVC,YAAY,qCAIpB,yBAAKD,UAAU,SACX,2BAAOA,UAAU,QACjB,2BACIX,MAAK,iBAAEE,QAAF,IAAEA,OAAF,EAAEA,EAASO,WAAX,QAAkB,GACvBX,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAeI,EAAW,2BAAKD,GAAN,IAAeO,IAAKV,EAAOC,UACjEW,UAAU,MACVC,YAAY,4BAIpB,4BAAQ7E,KAAK,SAASS,GAAG,iBAAzB,aCpBDqE,EAzCaC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EAC3BzC,oBAAS,GADkB,mBAClD0C,EADkD,KACzCC,EADyC,KAOnDC,EAAgB,CAAEC,QAASH,EAAU,OAAS,IAC9CI,EAAgB,CAAED,QAASH,EAAU,GAAK,QAE1CK,EAAmB,WACrBJ,GAAYD,IAShB,OANAM,8BAAoBP,GAAK,WACrB,MAAO,CACHM,uBAKJ,oCACI,yBAAKE,MAAOL,GACR,4BACIrF,KAAK,SACL2F,QAASH,GACRP,EAAMW,cAGf,yBAAKF,MAAOH,EAAeX,UAAU,oBAChCK,EAAMY,SACP,4BACI7F,KAAK,SACL2F,QAASH,GAFb,eCbDM,EAjBE,WACb,IAAMzB,EAAQC,aAAY,SAAAnE,GAAK,OAAIA,EAAMkE,SACzC,OACI,yBAAKO,UAAU,OAEPP,EAAM0B,KAAI,SAAAzF,GAAI,OACV,yBAAK0F,IAAK1F,EAAKG,IACX,kBAAC,IAAD,CAAMwF,GAAE,iBAAY3F,EAAKG,KACpBH,EAAKkE,a,QCcnB0B,EAxBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACT1D,mBAAS,IADA,mBAChChB,EADgC,KACvB2E,EADuB,KAcvC,OACI,oCACI,8BACI,2BAAOnC,MAAOxC,EAASsC,SAPd,SAACd,GAClBmD,EAAWnD,EAAMe,OAAOC,UAOhB,4BAAQ0B,QAAS,SAACU,GAAD,OAAoBA,EAdvCnD,sBACNiD,EAAc1E,GAAS6E,MAAK,SAAAC,GACxBH,EAAW,SAYP,kBCkBDI,EAjCE,SAACvB,GAAW,IAAD,EACQxC,mBAAS,IADjB,mBACjBgE,EADiB,KACPC,EADO,KAElBC,EAAQC,YAAc,cAE5BC,qBAAU,WACF5B,EAAMwB,UACNC,EAAYzB,EAAMwB,YAEvB,IAEH,IAAMN,EAAa,uCAAG,WAAO1E,GAAP,eAAAN,EAAA,sEACKwC,EAAapC,WAAWoF,EAAMG,OAAOrG,GAArC,sBAA6CgG,GAA7C,CAAuDhF,KAD5D,cACZK,EADY,OAElB4E,EAAY5E,EAAS2E,UAFH,kBAGX3E,GAHW,2CAAH,sDAMnB,OACI,oCACI,wCACA,kBAAC,EAAD,CAAaqE,cAAeA,IAExBM,GACI,4BACKA,EAASV,KAAI,SAACtE,EAASsF,GAAV,OACV,wBAAIf,IAAKe,GAAQtF,SC8B9BuF,EArDF,SAAC,GAAsB,IAAD,EAAnBC,EAAmB,EAAnBA,aAAmB,EACPxE,mBAASwE,GADF,mBACxB3G,EADwB,KAClB4G,EADkB,KAEzBpE,EAAWC,cAEjB,IAAKzC,EACD,OAAO,KAGX,IAAM6G,EAAO1D,KAAK2D,MAAM7D,aAAa8D,QAAQ,mBAEvCC,EAAe,uCAAG,WAAMrE,GAAN,eAAA9B,EAAA,6DACpB8B,EAAMC,iBACAqE,EAFc,2BAEMjH,GAFN,IAEYkH,MAAOlH,EAAKkH,MAAQ,IAFhC,SAGd7D,EAAazB,YAAYqF,GAHX,OAMpBL,EAAQK,GANY,2CAAH,sDASfE,EAAiB,uCAAG,WAAMxE,GAAN,SAAA9B,EAAA,yDACtB8B,EAAMC,kBAEaI,OAAOoE,QAAP,sBAA8BpH,EAAKkE,MAAnC,eAA+ClE,EAAKmE,SAHjD,gCAKZd,EAAavB,OAAO9B,EAAKG,IALb,OAMlBqC,EAASzC,EAAWC,IANF,2CAAH,sDAUjBqH,EACF,6BACI,4BAAQlH,GAAG,gBAAgBT,KAAK,SAAS2F,QAAS8B,GAAlD,WAIR,OACI,yBAAK7C,UAAU,QACX,yBAAKA,UAAU,OACX,4BAAKtE,EAAKkE,OACV,uBAAGoD,KAAMtH,EAAKoE,KAAMpE,EAAKoE,KACzB,oCAAUpE,EAAKkH,MACX,4BAAQ/G,GAAG,cAAcT,KAAK,SAAS2F,QAAS2B,GAAhD,SAIJ,uCAAahH,EAAKmE,SACb,OAAJ0C,QAAI,IAAJA,OAAA,EAAAA,EAAMzE,aAAN,OAAmBpC,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAM6G,YAAzB,aAAmB,EAAYzE,WAAYiF,EAC5C,kBAAC,EAAD,CAAUlB,SAAUnG,EAAKmG,cCzC1BoB,EATD,WACV,IAAMC,EAAQxD,aAAY,SAAAnE,GAAK,OAAIA,EAAM2H,SACzC,OACIA,GAAS,yBAAKlD,UAAS,uBAAkBkD,EAAM3H,MAAQ,aAAe,eACjE2H,EAAMhH,OCCJ,GAAEI,OALL,uCAAG,4BAAAC,EAAA,sEACYC,IAAMC,IAHjB,cAED,cACLS,EADK,yBAEJA,EAAS7B,MAFL,2CAAH,sDCsCG8H,EAnCG,WACd,IAAMC,EAAQ1D,aAAY,SAAAnE,GAAK,OAAIA,EAAM6H,SACnClF,EAAWC,cAQjB,OANA8D,qBAAU,WACNoB,EAAa/G,SAASoF,MAAK,SAAA0B,GACvBlF,EZHmB,SAACkF,GAC5B,MAAO,CACHhI,KAAM,aACNC,KAAM+H,GYAOE,CAAgBF,SAE9B,CAAClF,IAGA,6BACI,qCACA,+BACI,+BACI,4BACI,6BACA,4BAAI,8CAGJkF,EAAMjC,KAAI,SAAAoB,GACN,OAAO,wBAAInB,IAAKmB,EAAK/D,MACjB,4BACI,kBAAC,IAAD,CAAM6C,GAAE,iBAAYkB,EAAK1G,KAAO0G,EAAK/D,KAArC,OAEJ,4BAAK+D,EAAK9C,MAAM8D,gBCNjCC,EArBF,WACT,IAAMJ,EAAQ1D,aAAY,SAAAnE,GAAK,OAAIA,EAAM6H,SAEnCrB,EAAQC,YAAc,cACtByB,EAAeL,EAAMM,MAAK,SAAAnB,GAAI,OAAIA,EAAK1G,KAAOkG,EAAMG,OAAOrG,MAEjE,OAAO4H,GACH,oCACI,4BAAKA,EAAajF,MAClB,2CACA,4BAEQiF,EAAahE,MAAM0B,KAAI,SAAAzF,GAAI,OACvB,wBAAI0F,IAAK1F,EAAKkE,MAAQ+D,KAAKC,SAASC,UAAWnI,EAAKkE,aCQ7DkE,EAnBM,WACjB,IAAMvB,EAAO7C,aAAY,SAAAnE,GAAK,OAAIA,EAAMgH,QAClCrE,EAAWC,cASjB,OACI,2CACKoE,QADL,IACKA,OADL,EACKA,EAAMzE,SADX,aAEI,4BAAQjC,GAAG,gBAAgBkF,QAVd,WACjBrC,OAAOC,aAAaoF,WAAW,kBAC/B7F,EjBOG,CACH9C,KAAM,YiBPN8C,EAASpC,EAAa,yBACtBoC,EfoBJ,uCAAO,WAAMA,GAAN,SAAA3B,EAAA,sDACHyH,YAAW,WACP9F,EAAS,CACL9C,KAAM,mBAEX,KALA,2CAAP,yDedQ,YChBN6I,EAAU,CACZA,QAAS,GAcEC,EAZO,WAClB,OACI,gCACI,yBAAKlE,UAAU,UACX,kBAAC,IAAD,CAAMc,MAAOmD,EAAS5C,GAAG,KAAzB,QACA,kBAAC,IAAD,CAAMP,MAAOmD,EAAS5C,GAAG,UAAzB,SACA,kBAAC,EAAD,SCyED8C,EAjEH,WACV,IAAM5B,EAAO7C,aAAY,SAAAnE,GAAK,OAAIA,EAAMgH,QAClC9C,EAAQC,aAAY,SAAAnE,GAAK,OAAIA,EAAMkE,SACnCvB,EAAWC,cAEXiG,EAAcC,mBAEpBpC,qBAAU,WACR,IAAMM,EAAO7D,OAAOC,aAAa8D,QAAQ,kBACzC,GAAIF,EAAM,CACR,IAAM9D,EAAaI,KAAK2D,MAAMD,GAC9BrE,EAAShD,EAAQuD,IACjBM,EAAa3B,SAASqB,EAAWpC,UAElC,CAAC6B,IAEJ+D,qBAAU,WACRlD,EAAazC,SAASoF,MAAK,SAAA4C,GACzBA,EAAYC,MAAK,SAAChI,EAAGiI,GAAJ,OAAUA,EAAE5B,MAAQrG,EAAEqG,SACvC1E,ElB7BwB,SAACuB,GAC3B,MAAO,CACHrE,KAAM,aACNC,KAAMoE,GkB0BCgF,CAAeH,SAEzB,CAACpG,IAEJ,IAAM6D,EAAQC,YAAc,cACtBK,EAAeN,EACjBtC,EAAMiE,MAAK,SAAAhI,GACX,OAAOA,EAAKG,KAAOkG,EAAMG,OAAOrG,MAEhC,KAGJ,OAFAmD,QAAQC,MAGN,yBAAKe,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEW,OAATuC,EACI,oCACA,qCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmC,KAAK,cACV,kBAAC,EAAD,CAAMrC,aAAcA,KAEtB,kBAAC,IAAD,CAAOqC,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,CAAqB1D,YAAY,WAAWV,IAAK8D,GAC/C,kBAAC,EAAD,OAEF,kBAAC,EAAD,SAIJ,kBAAC,EAAD,SC9DRO,EAAUC,0BAAgB,CAC5BrC,KAAMjH,EACNmE,MAAO9D,EACPuH,MAAOjH,EACPmH,MAAOyB,IAGLC,EAAQC,sBACVJ,EACAK,8BACIC,0BAAgBC,OAIxBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.d06ccf78.chunk.js","sourcesContent":["const userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return action.data\n        case 'LOG_OUT':\n            return null\n        default:\n            return state\n    }\n}\n\nexport const setUser = (userObj) => {\n    return {\n        type: 'SET_USER',\n        data: userObj\n    }\n}\n\nexport const logOut = () => {\n    return {\n        type: 'LOG_OUT'\n    }\n}\n\nexport default userReducer","const blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT_BLOGS':\n            return action.data\n        case 'REMOVE_BLOG':\n            return state.filter(blog => blog.id !== action.data.id)\n        default:\n            return state\n    }\n}\n\nexport const inizializeBlog = (blogs) => {\n    return {\n        type: 'INIT_BLOGS',\n        data: blogs\n    }\n}\n\nexport const addBlog = (blog) => {\n    return {\n        type: 'ADD_BLOG',\n        data: blog\n    }\n}\n\nexport const removeBlog = (blog) => {\n    return {\n        type: 'REMOVE_BLOG',\n        data: blog\n    }\n}\n\nexport default blogReducer","const alertReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SUCCESS_ALERT':\n            return {\n                state: true,\n                text: action.data\n            }\n        case 'ERROR_ALERT':\n            return {\n                state: false,\n                text: action.data\n            }\n        case 'REMOVE_ALERT':\n            return null\n        default:\n            return state\n    }\n}\n\nexport const successAlert = (message) => {\n    return {\n        type: 'SUCCESS_ALERT',\n        data: message\n    }\n}\n\nexport const errorAlert = (message) => {\n    return {\n        type: 'ERROR_ALERT',\n        data: message\n    }\n}\n\nexport const removeAlert = () => {\n    return async dispatch => {\n        setTimeout(() => {\n            dispatch({\n                type: 'REMOVE_ALERT'\n            })\n        }, 5000)\n    }\n}\n\nexport default alertReducer","const usersReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT_USERS':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport const initializeUsers = (users) => {\n    return {\n        type: 'INIT_USERS',\n        data: users\n    }\n}\n\nexport default usersReducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data\n}\n\nconst addComment = async (blogId, comment) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(`${baseUrl}/${blogId}/comments`, comment, config)\n    return response.data\n}\n\nconst create = async blog => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, blog, config)\n    return response.data\n}\n\nconst updateLikes = async blog => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.put(`${baseUrl}/${blog.id}`, blog, config)\n    return response.data\n}\n\nconst remove = async id => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response\n}\n\nexport default {\n    getAll,\n    create,\n    setToken,\n    updateLikes,\n    remove,\n    addComment\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credential => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { login }","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setUser } from '../reducers/user'\nimport loginServices from '../services/login'\nimport blogServices from '../services/blog'\nimport { successAlert, errorAlert } from '../reducers/alert'\n\nconst LoginForm = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const userObject = await loginServices.login({ name: username, password, username })\n            if (userObject) {\n                window.localStorage.setItem('loggedBlogUser', JSON.stringify(userObject))\n                blogServices.setToken(userObject.token)\n                dispatch(setUser(userObject))\n                dispatch(successAlert('Logged successfully'))\n            }\n        } catch (error) {\n            dispatch(errorAlert('Invalid username or password'))\n            console.log(error)\n        }\n    }\n\n    return (\n        <>\n            <h2> log in to application</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    username <input\n                        onChange={({ target }) => { setUsername(target.value) }}\n                        id='input-username'></input>\n                </div>\n                <div>\n                    password <input type=\"password\"\n                        onChange={({ target }) => { setPassword(target.value) }}\n                        id='input-password'></input>\n                </div>\n                <button type=\"submit\">login</button>\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport blogServices from '../../services/blog'\nimport { addBlog } from '../../reducers/blog'\nimport { errorAlert, successAlert } from '../../reducers/alert'\n\nconst BlogForm = () => {\n    const [newBlog, setNewBlog] = useState(null)\n\n    const blogs = useSelector(state => state.blogs)\n    const dispatch = useDispatch()\n\n    const submitHandle = async (event) => {\n        event.preventDefault()\n        if (!newBlog || !newBlog.title || !newBlog.author || !newBlog.url) {\n            dispatch(errorAlert('Missing blog\\'s atributes'))\n            return\n        }\n\n        const response = await blogServices.create(newBlog)\n\n        if (response) {\n            dispatch(addBlog(blogs.concat(response)))\n            dispatch(successAlert(`${JSON.stringify(newBlog.title)} created successfully`))\n        }\n        setNewBlog(null)\n    }\n\n    return (\n        <div className=\"box\">\n            <h3>create new</h3>\n            <form onSubmit={submitHandle}>\n                <div className=\"field\">\n                    <label className=\"title\"></label>\n                    <input\n                        className=\"textarea is-small\"\n                        value={newBlog?.title ?? ''}\n                        onChange={({ target }) => {\n                            setNewBlog({ ...newBlog, title: target.value })\n                        }}\n                        placeholder=\"Write the best blog ever\">\n\n                    </input>\n                </div>\n                <div className=\"field\">\n                    <label className=\"author\"></label>\n                    <input\n                        value={newBlog?.author ?? ''}\n                        onChange={({ target }) => { setNewBlog({ ...newBlog, author: target.value }) }}\n                        className='author'\n                        placeholder=\"Who is the author of this blog?\">\n\n                    </input>\n                </div>\n                <div className=\"field\">\n                    <label className=\"url\"></label>\n                    <input\n                        value={newBlog?.url ?? ''}\n                        onChange={({ target }) => { setNewBlog({ ...newBlog, url: target.value }) }}\n                        className='url'\n                        placeholder=\"e.g www.hanielbaez.com\">\n\n                    </input>\n                </div>\n                <button type=\"submit\" id='submit-button'>create</button>\n            </form>\n        </div>\n    )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst TogglableVisibility = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    TogglableVisibility.propTypes = {\n        buttonTitle: PropTypes.string.isRequired\n    }\n\n    const hideOnVisible = { display: visible ? 'none' : '' }\n    const showOnVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <>\n            <div style={hideOnVisible}>\n                <button\n                    type='button'\n                    onClick={toggleVisibility}>\n                    {props.buttonTitle}\n                </button>\n            </div>\n            <div style={showOnVisible} className=\"togglableContent\">\n                {props.children}\n                <button\n                    type='button'\n                    onClick={toggleVisibility}>\n                    Cancel\n            </button>\n            </div>\n        </>\n    )\n})\n\nexport default TogglableVisibility","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst BlogList = () => {\n    const blogs = useSelector(state => state.blogs)\n    return (\n        <div className=\"box\">\n            {\n                blogs.map(blog =>\n                    <div key={blog.id}>\n                        <Link to={`/blogs/${blog.id}`}>\n                            {blog.title}\n                        </Link>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default BlogList","import React, { useState } from 'react'\n\nconst CommentForm = ({ createComment }) => {\n    const [comment, setComment] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        createComment(comment).then(_ => {\n            setComment('')\n        })\n    }\n\n    const hanldeChange = (event) => {\n        setComment(event.target.value)\n    }\n\n    return (\n        <>\n            <form>\n                <input value={comment} onChange={hanldeChange}></input>\n                <button onClick={(e) => handleSubmit(e)}>add comment</button>\n            </form>\n        </>\n    )\n}\n\nexport default CommentForm","import React, { useState, useEffect } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport CommentForm from './commentForm'\nimport blogServices from '../../services/blog'\n\nconst Comments = (props) => {\n    const [comments, setComments] = useState([])\n    const match = useRouteMatch('/blogs/:id')\n\n    useEffect(() => {\n        if (props.comments) {\n            setComments(props.comments)\n        }\n    }, [])\n\n    const createComment = async (comment) => {\n        const response = await blogServices.addComment(match.params.id, [...comments, comment])\n        setComments(response.comments)\n        return response\n    }\n\n    return (\n        <>\n            <h3>comments</h3>\n            <CommentForm createComment={createComment} />\n            {\n                comments && (\n                    <ul>\n                        {comments.map((comment, index) =>\n                            <li key={index}>{comment}</li>\n                        )}\n                    </ul>\n                )\n            }\n        </>\n    )\n}\n\nexport default Comments","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { removeBlog } from '../../reducers/blog'\nimport blogServices from '../../services/blog'\nimport Comments from '../comment/comments'\n\nconst Blog = ({ blogSelected }) => {\n    const [blog, setBlog] = useState(blogSelected)\n    const dispatch = useDispatch()\n\n    if (!blog) {\n        return null\n    }\n\n    const user = JSON.parse(localStorage.getItem('loggedBlogUser'))\n\n    const handleClickLike = async event => {\n        event.preventDefault()\n        const toUpdateBlog = { ...blog, likes: blog.likes + 1 }\n        await blogServices.updateLikes(toUpdateBlog)\n\n        //? No checking the result of the PUT operation\n        setBlog(toUpdateBlog)\n    }\n\n    const handleClickRemove = async event => {\n        event.preventDefault()\n\n        const isOkRemove = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\n        if (isOkRemove) {\n            await blogServices.remove(blog.id)\n            dispatch(removeBlog(blog))\n        }\n    }\n\n    const removeButton = (\n        <div>\n            <button id='remove-button' type='button' onClick={handleClickRemove}>remove</button>\n        </div>\n    )\n\n    return (\n        <div className=\"card\">\n            <div className=\"box\">\n                <h2>{blog.title}</h2>\n                <a href={blog.url}>{blog.url}</a>\n                <p>likes {blog.likes}\n                    <button id='like-button' type='button' onClick={handleClickLike}>\n                        like\n                    </button>\n                </p>\n                <p>added by {blog.author}</p>\n                {user?.username === blog?.user?.username && removeButton}\n                <Comments comments={blog.comments} />\n            </div >\n        </div>\n    )\n}\n\nexport default Blog","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Alert = () => {\n    const alert = useSelector(state => state.alert)\n    return (\n        alert && <div className={`notification ${alert.state ? 'is-success' : 'is-warning'}`}>\n            {alert.text}\n        </div>\n    )\n}\n\nexport default Alert","import axios from 'axios'\nconst baseURL = '/api/users'\n\nconst getAll = async () => {\n    const response = await axios.get(baseURL)\n    return response.data\n}\n\nexport default { getAll }","import React, { useEffect } from 'react'\nimport userServices from '../../services/user'\nimport { Link } from 'react-router-dom'\nimport { initializeUsers } from '../../reducers/users'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst UsersList = () => {\n    const users = useSelector(state => state.users)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        userServices.getAll().then(users => {\n            dispatch(initializeUsers(users))\n        })\n    }, [dispatch])\n\n    return (\n        <div>\n            <h2>Users</h2>\n            <table>\n                <tbody>\n                    <tr>\n                        <th></th>\n                        <th><b>blogs created</b></th>\n                    </tr>\n                    {\n                        users.map(user => {\n                            return <tr key={user.name}>\n                                <td>\n                                    <Link to={`/users/${user.id}`}>{user.name}  </Link>\n                                </td>\n                                <td>{user.blogs.length}</td>\n                            </tr>\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default UsersList","import React from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst User = () => {\n    const users = useSelector(state => state.users)\n\n    const match = useRouteMatch('/users/:id')\n    const selectedUser = users.find(user => user.id === match.params.id)\n\n    return selectedUser && (\n        <>\n            <h2>{selectedUser.name}</h2>\n            <h3>added blogs</h3>\n            <ul>\n                {\n                    selectedUser.blogs.map(blog =>\n                        <li key={blog.title + Math.random().toString}>{blog.title}</li>\n                    )\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default User","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logOut } from '../reducers/user'\nimport { successAlert, removeAlert } from '../reducers/alert'\n\n\nconst LogoutButton = () => {\n    const user = useSelector(state => state.user)\n    const dispatch = useDispatch()\n\n    const handleLogOut = () => {\n        window.localStorage.removeItem('loggedBlogUser')\n        dispatch(logOut())\n        dispatch(successAlert('logout sueccessfully'))\n        dispatch(removeAlert())\n    }\n\n    return (\n        <>\n            {user?.username} logged in\n            <button id='logout-button' onClick={handleLogOut}>logout</button>\n        </>\n    )\n}\n\nexport default LogoutButton","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport LogoutButton from './logoutButton'\n\nconst padding = {\n    padding: 5\n}\nconst NavigationBar = () => {\n    return (\n        <header>\n            <nav className=\"navbar\">\n                <Link style={padding} to='/'>home</Link>\n                <Link style={padding} to='/users'>users</Link>\n                <LogoutButton />\n            </nav>\n        </header>\n    )\n}\n\nexport default NavigationBar","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from 'react-router-dom'\nimport { setUser } from './reducers/user'\nimport blogServices from './services/blog'\nimport './App.css'\nimport LoginForm from './components/loginForm'\nimport BlogForm from './components/blog/blogForm'\nimport TogglableVisibility from './components/toggleVisibility'\nimport BlogList from './components/blog/blogList'\nimport Blog from './components/blog/blog'\nimport Alert from './components/alert'\nimport UsersList from './components/user/usersList'\nimport User from './components/user/user'\nimport { inizializeBlog } from './reducers/blog'\nimport NavigationBar from './components/navigationBar'\n\nconst App = () => {\n  const user = useSelector(state => state.user)\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    const user = window.localStorage.getItem('loggedBlogUser')\n    if (user) {\n      const userObject = JSON.parse(user)\n      dispatch(setUser(userObject))\n      blogServices.setToken(userObject.token)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    blogServices.getAll().then(returnBlogs => {\n      returnBlogs.sort((a, b) => b.likes - a.likes)\n      dispatch(inizializeBlog(returnBlogs))\n    })\n  }, [dispatch])\n\n  const match = useRouteMatch('/blogs/:id')\n  const blogSelected = match\n    ? blogs.find(blog => {\n      return blog.id === match.params.id\n    })\n    : null\n  console.log()\n\n  return (\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <NavigationBar />\n        <Alert />\n        {\n          user !== null\n            ? <>\n              <h2>blogs</h2>\n              <Switch>\n                <Route path='/blogs/:id'>\n                  <Blog blogSelected={blogSelected} />\n                </Route>\n                <Route path='/users/:id'>\n                  <User />\n                </Route>\n                <Route path='/users'>\n                  <UsersList />\n                </Route>\n                <Route path='/'>\n                  <TogglableVisibility buttonTitle='new note' ref={blogFormRef}>\n                    <BlogForm />\n                  </TogglableVisibility>\n                  <BlogList />\n                </Route>\n              </Switch>\n            </>\n            : <LoginForm />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport userReducer from './reducers/user'\nimport blogReducer from './reducers/blog'\nimport alertReducer from './reducers/alert'\nimport initializeUser from './reducers/users'\n\nimport 'bulma/css/bulma.css'\n\nimport App from './App'\n\nconst reducer = combineReducers({\n    user: userReducer,\n    blogs: blogReducer,\n    alert: alertReducer,\n    users: initializeUser\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root'))"],"sourceRoot":""}