{"version":3,"sources":["services/login.js","services/blog.js","components/loginForm.js","components/blogForm.js","components/toggleVisibility.js","components/blog.js","components/blogList.js","components/alert.js","App.js","index.js"],"names":["login","credential","a","axios","post","response","data","token","getAll","get","request","create","blog","config","headers","Authorization","setToken","newToken","updateLikes","put","id","remove","delete","React","require","LoginForm","handleLogin","setUsername","setPassword","onSubmit","onChange","target","value","type","BlogForm","createBlog","timeOutAlert","useState","newBlog","setNewBlog","submitHandle","event","preventDefault","title","author","url","state","text","TogglableVisibility","forwardRef","props","ref","visible","setVisible","hideOnVisible","display","showOnVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonTitle","children","Blog","blogObject","removeBlogList","setBlog","user","JSON","parse","localStorage","getItem","handleClickLike","toUpdateBlog","likes","blogServices","handleClickRemove","console","log","username","window","confirm","removeButton","borderStyle","margin","padding","BlogList","blogs","prototype","PropType","array","isRequired","func","map","key","Alert","alert","className","App","password","setUser","setBlogs","setAlert","blogFormRef","useRef","useEffect","then","sort","b","userObject","addBlog","current","concat","stringify","loginServices","setItem","setTimeout","removeItem","blogToRemove","newListBlogs","filter","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.64f030b8.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credential => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data\n}\n\nconst create = async blog => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, blog, config)\n    return response.data\n}\n\nconst updateLikes = async blog => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.put(`${baseUrl}/${blog.id}`, blog, config)\n    return response.data\n}\n\nconst remove = async id => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response\n}\n\nexport default {\n    getAll,\n    create,\n    setToken,\n    updateLikes,\n    remove\n}","const React = require('react')\n\nconst LoginForm = ({ handleLogin, setUsername, setPassword }) => {\n    return (\n        <>\n            < h2 > log in to application</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    username <input onChange={({ target }) => { setUsername(target.value) }}></input>\n                </div>\n                <div>\n                    password <input type=\"password\" onChange={({ target }) => { setPassword(target.value) }}></input>\n                </div>\n                <button type=\"submit\">login</button>\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BlogForm = ({ createBlog, timeOutAlert }) => {\n    const [newBlog, setNewBlog] = useState(null)\n\n    const submitHandle = async (event) => {\n        event.preventDefault()\n        if (!newBlog || !newBlog.title || !newBlog.author || !newBlog.url) {\n            timeOutAlert({\n                state: false,\n                text: 'Missing blog\\'s atributes'\n            })\n            return\n        }\n        createBlog(newBlog)\n        setNewBlog(null)\n    }\n\n    return (\n        <>\n            <h3>create new</h3>\n            <form onSubmit={submitHandle}>\n                <div>\n                    title: <input\n                        value={newBlog?.title ?? ''}\n                        onChange={({ target }) => {\n                            setNewBlog({ ...newBlog, title: target.value })\n                        }}>\n\n                    </input>\n                </div>\n                <div>\n                    author: <input\n                        value={newBlog?.author ?? ''}\n                        onChange={({ target }) => { setNewBlog({ ...newBlog, author: target.value }) }}>\n\n                    </input>\n                </div>\n                <div>\n                    url: <input\n                        value={newBlog?.url ?? ''}\n                        onChange={({ target }) => { setNewBlog({ ...newBlog, url: target.value }) }}>\n\n                    </input>\n                </div>\n                <button type=\"submit\">create</button>\n            </form>\n        </>\n    )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst TogglableVisibility = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    TogglableVisibility.propTypes = {\n        buttonTitle: PropTypes.string.isRequired\n    }\n\n    const hideOnVisible = { display: visible ? 'none' : '' }\n    const showOnVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <>\n            <div style={hideOnVisible}>\n                <button\n                    type='button'\n                    onClick={toggleVisibility}>\n                    {props.buttonTitle}\n                </button>\n            </div>\n            <div style={showOnVisible}>\n                {props.children}\n                <button\n                    type='button'\n                    onClick={toggleVisibility}>\n                    Cancel\n            </button>\n            </div>\n        </>\n    )\n})\n\nexport default TogglableVisibility","import React, { useState } from 'react'\nimport TogglableVisibility from './toggleVisibility'\nimport blogServices from '../services/blog'\n\nconst Blog = ({ blogObject, removeBlogList }) => {\n    const [blog, setBlog] = useState(blogObject)\n\n    const user = JSON.parse(localStorage.getItem('loggedBlogUser'))\n\n    const blogStyle = {\n        borderStyle: 'solid',\n        margin: '10px',\n        padding: '4px'\n    }\n\n    const handleClickLike = async event => {\n        event.preventDefault()\n        const toUpdateBlog = { ...blog, likes: blog.likes + 1 }\n        await blogServices.updateLikes(toUpdateBlog)\n\n        //? No checking the result of the PUT operation\n        setBlog(toUpdateBlog)\n    }\n\n    const handleClickRemove = async event => {\n        event.preventDefault()\n        console.log(`${user.username}`)\n\n        const isOkRemove = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\n        if (isOkRemove) {\n            await blogServices.remove(blog.id)\n            removeBlogList(blog)\n        }\n    }\n\n    const removeButton = (\n        <div>\n            <button type='button' onClick={handleClickRemove}>remove</button>\n        </div>\n    )\n\n    return (\n        <div style={blogStyle}>\n            {blog.title}\n            < TogglableVisibility buttonTitle='view' >\n                <p>{blog.url}</p>\n                <p>likes {blog.likes}\n                    <button type='button' onClick={handleClickLike}>\n                        like\n                    </button></p>\n                <p> {blog.author}</p>\n                {user?.username === blog?.user?.username && removeButton}\n            </TogglableVisibility >\n        </div >\n    )\n}\n\nexport default Blog","import React from 'react'\nimport Blog from './blog'\nimport PropType from 'prop-types'\n\nconst BlogList = ({ blogs, removeBlogList }) => {\n\n    BlogList.prototype = {\n        blogs: PropType.array.isRequired,\n        removeBlogList: PropType.func.isRequired\n    }\n\n    return (\n        <>\n            {\n                blogs.map(blog =>\n                    <div key={blog.id}>\n                        <Blog blogObject={blog}\n                            removeBlogList={removeBlogList} />\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default BlogList","import React from 'react'\n\nconst Alert = ({ alert }) => {\n    return (\n        alert && <p className={alert.state ? 'alertGood' : 'alertBad'}>{alert.text}</p>\n    )\n}\n\nexport default Alert","import React, { useState, useEffect, useRef } from 'react'\nimport loginServices from './services/login'\nimport blogServices from './services/blog'\nimport './App.css'\nimport LoginForm from './components/loginForm'\nimport BlogForm from './components/blogForm'\nimport TogglableVisibility from './components/toggleVisibility'\nimport BlogList from './components/blogList'\nimport Alert from './components/alert'\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [blogs, setBlogs] = useState([])\n  const [alert, setAlert] = useState(null)\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogServices.getAll().then(blogs => {\n      blogs.sort((a, b) => b.likes - a.likes)\n      setBlogs(blogs)\n    })\n  }, [])\n\n  useEffect(() => {\n    const user = window.localStorage.getItem('loggedBlogUser')\n    if (user) {\n      const userObject = JSON.parse(user)\n      setUser(userObject)\n      blogServices.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = async (blogObject) => {\n    const response = await blogServices.create(blogObject)\n    blogFormRef.current.toggleVisibility()\n\n    if (response) {\n      setBlogs(blogs.concat(response))\n      timeOutAlert({\n        state: true,\n        text: `${JSON.stringify(blogObject.title)} created successfully`\n      })\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginServices.login({ username, password })\n      if (user) {\n        window.localStorage.setItem('loggedBlogUser', JSON.stringify(user))\n        blogServices.setToken(user.token)\n        setUser(user)\n\n        timeOutAlert({\n          state: true,\n          text: 'Logged successfully'\n        })\n      }\n    } catch (error) {\n      timeOutAlert({\n        state: false,\n        text: 'Invalid username or password'\n      })\n      console.log(error)\n    }\n  }\n\n  const handleLogOut = () => {\n    window.localStorage.removeItem('loggedBlogUser')\n    setUser(null)\n    timeOutAlert({\n      state: true,\n      text: 'logout successfully'\n    })\n  }\n\n  const timeOutAlert = (alert) => {\n    setAlert(alert)\n    setTimeout(() => {\n      setAlert(null)\n    }, 5000)\n  }\n\n  const removeBlogFromList = blogToRemove => {\n    const newListBlogs = blogs.filter(blog => blog.id !== blogToRemove.id)\n    console.log(newListBlogs)\n    setBlogs(newListBlogs)\n  }\n\n  return (\n    <>\n      <Alert alert={alert} />\n      {\n        user !== null\n          ?\n          <>\n            <h2>blogs</h2>\n            {user?.username} logged in\n            <button onClick={handleLogOut}>logout</button>\n            <TogglableVisibility buttonTitle='new note' ref={blogFormRef}>\n              <BlogForm createBlog={addBlog} timeOutAlert={timeOutAlert} />\n            </TogglableVisibility>\n            <BlogList blogs={blogs} removeBlogList={removeBlogFromList} />\n          </>\n          : <LoginForm\n            handleLogin={handleLogin}\n            setUsername={setUsername}\n            setPassword={setPassword}\n          />\n      }\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}