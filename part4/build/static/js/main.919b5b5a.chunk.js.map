{"version":3,"sources":["services/login.js","services/blog.js","components/blog.js","App.js","index.js"],"names":["login","credential","a","axios","post","response","data","token","getAll","get","request","create","blog","config","headers","Authorization","setToken","newToken","Blog","title","author","App","useState","username","setUsername","password","setPassword","user","setUser","blogs","setBlogs","newBlog","setNewBlog","alert","setAlert","useEffect","blogServices","then","window","localStorage","getItem","userObject","JSON","parse","handleLogin","event","preventDefault","loginServices","setItem","stringify","timeOutAlert","state","text","console","log","createBlogHandle","url","concat","loginForm","onSubmit","onChange","target","value","type","showBlogs","onClick","removeItem","map","key","id","createBlogForm","setTimeout","className","ReactDom","render","document","getElementById"],"mappings":"qRAQe,GAAEA,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACaC,IAAMC,KAHjB,aAG+BH,GADjC,cACJI,EADI,yBAEHA,EAASC,MAFN,2CAAH,uDCAPC,EAAQ,KAmBG,GAAEC,OAbL,uCAAG,4BAAAN,EAAA,sEACWC,IAAMM,IAThB,cAQD,cACLC,EADK,yBAEJA,EAAQJ,MAFJ,2CAAH,qDAaaK,OARb,uCAAG,WAAMC,GAAN,iBAAAV,EAAA,6DACLW,EAAS,CACXC,QAAS,CAAEC,cAAeR,IAFnB,SAIYJ,IAAMC,KAjBjB,aAiB+BQ,EAAMC,GAJtC,cAILR,EAJK,yBAKJA,EAASC,MALL,2CAAH,sDAQqBU,SAjBhB,SAAAC,GACbV,EAAK,iBAAaU,KCIPC,EARF,SAAC,GAAc,IAAZN,EAAW,EAAXA,KACZ,OACI,2BACKA,EAAKO,MADV,IACkBP,EAAKQ,SCkKhBC,G,MAjKH,WAAO,IAAD,QACgBC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGQJ,mBAAS,MAHjB,mBAGTK,EAHS,KAGHC,EAHG,OAIUN,mBAAS,IAJnB,mBAITO,EAJS,KAIFC,EAJE,OAKcR,mBAAS,MALvB,mBAKTS,EALS,KAKAC,EALA,OAMUV,mBAAS,MANnB,mBAMTW,EANS,KAMFC,EANE,KAQhBC,qBAAU,WACRC,EAAa5B,SAAS6B,MAAK,SAAAR,GACzBC,EAASD,QAEV,IAEHM,qBAAU,WACR,IAAMR,EAAOW,OAAOC,aAAaC,QAAQ,kBACzC,GAAIb,EAAM,CACR,IAAMc,EAAaC,KAAKC,MAAMhB,GAC9BC,EAAQa,GACRL,EAAapB,SAASW,EAAKpB,UAE5B,IAEH,IAAMqC,EAAW,uCAAG,WAAOC,GAAP,eAAA3C,EAAA,6DAClB2C,EAAMC,iBADY,kBAGGC,EAAc/C,MAAM,CAAEuB,WAAUE,aAHnC,QAGVE,EAHU,UAKdW,OAAOC,aAAaS,QAAQ,iBAAkBN,KAAKO,UAAUtB,IAC7DS,EAAapB,SAASW,EAAKpB,OAC3BqB,EAAQD,GAERuB,EAAa,CACXC,OAAO,EACPC,KAAM,yBAXM,gDAehBF,EAAa,CACXC,OAAO,EACPC,KAAM,iCAERC,QAAQC,IAAR,MAnBgB,yDAAH,sDAuBXC,EAAgB,uCAAG,WAAOV,GAAP,eAAA3C,EAAA,yDACvB2C,EAAMC,iBACDf,GAAYA,EAAQZ,OAAUY,EAAQX,QAAWW,EAAQyB,IAFvC,uBAGrBN,EAAa,CACXC,OAAO,EACPC,KAAM,6BALa,0CASAhB,EAAazB,OAAOoB,GATpB,QASjB1B,EATiB,UAWrByB,EAASD,EAAM4B,OAAOpD,IACtB2B,EAAW,MACXkB,EAAa,CACXC,OAAO,EACPC,KAAK,GAAD,OAAKV,KAAKO,UAAUlB,EAAQZ,OAA5B,4BAfe,2CAAH,sDA6BhBuC,EACJ,oCACE,sDACA,0BAAMC,SAAUf,GACd,yCACW,2BAAOgB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAerC,EAAYqC,EAAOC,WAEjE,yCACW,2BAAOC,KAAK,WAAWH,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAenC,EAAYmC,EAAOC,WAEjF,4BAAQC,KAAK,UAAb,WAKAC,EACJ,oCACE,qCADF,OAEGrC,QAFH,IAEGA,OAFH,EAEGA,EAAMJ,SAFT,aAGE,4BAAQ0C,QA5BS,WACnB3B,OAAOC,aAAa2B,WAAW,kBAC/BtC,EAAQ,MACRsB,EAAa,CACXC,OAAO,EACPC,KAAM,0BAuBN,UAEEvB,EAAMsC,KAAI,SAAAvD,GAAI,OACZ,yBAAKwD,IAAKxD,EAAKyD,IACb,kBAAC,EAAD,CAAMzD,KAAMA,SAOhB0D,EACJ,oCACE,0BAAMX,SAAUJ,GACd,uCACS,2BACLO,MAAK,iBAAE/B,QAAF,IAAEA,OAAF,EAAEA,EAASZ,aAAX,QAAoB,GACzByC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX7B,EAAW,2BAAKD,GAAN,IAAeZ,MAAO0C,EAAOC,aAK7C,wCACU,2BACNA,MAAK,iBAAE/B,QAAF,IAAEA,OAAF,EAAEA,EAASX,cAAX,QAAqB,GAC1BwC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAe7B,EAAW,2BAAKD,GAAN,IAAeX,OAAQyC,EAAOC,aAIxE,qCACO,2BACHA,MAAK,iBAAE/B,QAAF,IAAEA,OAAF,EAAEA,EAASyB,WAAX,QAAkB,GACvBI,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OAAe7B,EAAW,2BAAKD,GAAN,IAAeyB,IAAKK,EAAOC,aAIrE,4BAAQC,KAAK,UAAb,YAKAb,EAAe,SAACjB,GACpBC,EAASD,GACTsC,YAAW,WACTrC,EAAS,QACR,MAGL,OACE,oCAEID,GAAS,uBAAGuC,UAAWvC,EAAMkB,MAAQ,YAAc,YAAalB,EAAMmB,MAG7D,OAATzB,EAEE,oCACGqC,EACAM,GAEDZ,KC7JZe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.919b5b5a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credential => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios.get(baseUrl)\n    return request.data\n}\n\nconst create = async blog => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, blog, config)\n    return response.data\n}\n\nexport default { getAll, create, setToken }","import React from 'react'\n\nconst Blog = ({ blog }) => {\n    return (\n        <p>\n            {blog.title} {blog.author}\n        </p>\n    )\n}\n\nexport default Blog","import React, { useState, useEffect } from 'react'\nimport loginServices from './services/login'\nimport blogServices from './services/blog'\nimport Blog from './components/blog'\nimport './App.css'\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState(null)\n  const [alert, setAlert] = useState(null)\n\n  useEffect(() => {\n    blogServices.getAll().then(blogs => {\n      setBlogs(blogs)\n    })\n  }, [])\n\n  useEffect(() => {\n    const user = window.localStorage.getItem('loggedBlogUser')\n    if (user) {\n      const userObject = JSON.parse(user)\n      setUser(userObject)\n      blogServices.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginServices.login({ username, password })\n      if (user) {\n        window.localStorage.setItem('loggedBlogUser', JSON.stringify(user))\n        blogServices.setToken(user.token)\n        setUser(user)\n\n        timeOutAlert({\n          state: true,\n          text: 'Logged successfully'\n        })\n      }\n    } catch (error) {\n      timeOutAlert({\n        state: false,\n        text: 'Invalid username or password'\n      })\n      console.log(error)\n    }\n  }\n\n  const createBlogHandle = async (event) => {\n    event.preventDefault()\n    if (!newBlog || !newBlog.title || !newBlog.author || !newBlog.url) {\n      timeOutAlert({\n        state: false,\n        text: 'Missing blog\\'s atributes'\n      })\n      return\n    }\n    const response = await blogServices.create(newBlog)\n    if (response) {\n      setBlogs(blogs.concat(response))\n      setNewBlog(null)\n      timeOutAlert({\n        state: true,\n        text: `${JSON.stringify(newBlog.title)} created successfully`\n      })\n    }\n  }\n\n  const handleLogOut = () => {\n    window.localStorage.removeItem('loggedBlogUser')\n    setUser(null)\n    timeOutAlert({\n      state: true,\n      text: 'logout successfully'\n    })\n  }\n\n  const loginForm = (\n    <>\n      < h2 > log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username <input onChange={({ target }) => { setUsername(target.value) }}></input>\n        </div>\n        <div>\n          password <input type=\"password\" onChange={({ target }) => { setPassword(target.value) }}></input>\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </>\n  )\n\n  const showBlogs = (\n    <>\n      <h2>blogs</h2>\n      {user?.username} logged in\n      <button onClick={handleLogOut}>logout</button>\n      {\n        blogs.map(blog =>\n          <div key={blog.id}>\n            <Blog blog={blog} />\n          </div>\n        )\n      }\n    </>\n  )\n\n  const createBlogForm = (\n    <>\n      <form onSubmit={createBlogHandle}>\n        <div>\n          title: <input\n            value={newBlog?.title ?? ''}\n            onChange={({ target }) => {\n              setNewBlog({ ...newBlog, title: target.value })\n            }}>\n\n          </input>\n        </div>\n        <div>\n          author: <input\n            value={newBlog?.author ?? ''}\n            onChange={({ target }) => { setNewBlog({ ...newBlog, author: target.value }) }}>\n\n          </input>\n        </div>\n        <div>\n          url: <input\n            value={newBlog?.url ?? ''}\n            onChange={({ target }) => { setNewBlog({ ...newBlog, url: target.value }) }}>\n\n          </input>\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </>\n  )\n\n  const timeOutAlert = (alert) => {\n    setAlert(alert)\n    setTimeout(() => {\n      setAlert(null)\n    }, 5000)\n  }\n\n  return (\n    <>\n      {\n        alert && <p className={alert.state ? 'alertGood' : 'alertBad'}>{alert.text}</p>\n      }\n      {\n        user !== null\n          ?\n          <>\n            {showBlogs}\n            {createBlogForm}\n          </>\n          : loginForm\n      }\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}